(() => {
  const $ = (s, el=document) => el.querySelector(s);
  const $$ = (s, el=document) => [...el.querySelectorAll(s)];
  $("#year").textContent = new Date().getFullYear();

  // ===========================
  // „Éá„Éº„ÇøÔºö„ÉÜ„É≥„Éó„É¨„Éº„Éà
  // - situation: "skip"Ôºà‰ªäÊó•„ÅØÂÖ•„Çâ„Å™„ÅÑÔºâ / "after"ÔºàÂÖ•„Å£„Åü„Åë„Å©‰∏çÁô∫Ôºâ
  // - category: tide, wind, crowd, gear, work, home, myth
  // „Çπ„Éù„ÉÉ„ÉàÂêç„ÅØ‰Ωø„ÅÑ„Åæ„Åõ„ÇìÔºàÊ±éÁî®Ë°®ÁèæÔºâ
  // ===========================
  const TEMPLATES_SKIP = {
    tide: [
      "‰ªäÊó•„ÅØÊΩÆ„Åå‚ÄúÈáç„ÅÑ‚Äù„ÄÇÊùø„ÅåÈÄ≤„ÇÄÂâç„Å´Ê∞óÊåÅ„Å°„ÅåÊàª„Åï„Çå„Åü„ÄÇ",
      "Ê∫ÄÊΩÆ„Å®Âπ≤ÊΩÆ„ÅÆÁã≠Èñì„ÄÅÊ≥¢„ÅÆÂëºÂê∏„Åå‰π±„Çå„Å¶„Å¶Âêà„Çè„Å™„ÅÑ„ÄÇ‰ªäÊó•„ÅØ‚ÄúÊ≥¢„ÅÆÊ©üÂ´å„ÅåÊÇ™„ÅÑÊó•‚Äù„ÄÇ",
      "„Çª„ÉÉ„Éà„ÅÆÂë®Êúü„ÅåÂêà„Çè„Å™„ÅÑ„ÄÇ‰∏ÄÊú¨‰πó„Çã„Åî„Å®„Å´3Âπ¥ÂàÜÊ≠≥„ÇíÂèñ„Çã„ÇÑ„Å§„ÄÇ",
      "Âπ≤ÊΩÆ„ÅßÊµ∑Â∫ï„Åå‰∏∏Ë¶ã„Åà„ÄÇ„É™„Éº„Éï„ÅÆ„Çµ„Ç§„É≥‰ºö„Å´ÂèÇÂä†„Åô„ÇãÊ∞ó„ÅØ„Å™„ÅÑ„ÄÇ",
      "‰ªäÊó•„ÅØ‚ÄúÈÄÜ„ÅïÊΩÆ‚Äù„ÄÇ„Éë„Éâ„É´„Åó„Å¶„ÇÇÂæå„Çç„Å´‰∏ã„Åå„ÇãÊÑü„Åò„ÄÇ"
    ],
    wind: [
      "„Ç™„É≥„Ç∑„Éß„Ç¢${wdeg}¬∞„ÅßÂÖ®ÈÉ®„Éê„É©„Åë„Å¶„Çã„ÄÇÊµ∑„ÅØÂ∑®Â§ß„Å™**„Åã„ÅçÊ∑∑„ÅúÊ©ü**„Å´„Å™„Å£„Åü„ÄÇ",
      "„Ç™„Éï„Ç∑„Éß„Ç¢Âº∑„Åô„Åé„Å¶„ÉÜ„Ç§„ÇØ„Ç™„Éï„ÅßÂæå„Çç„Åã„Çâ**„Éì„É≥„Çø**„Åï„Çå„ÇãÊÑü„Åò„ÄÇ‰ªäÊó•„ÅØË¶ãÂ≠¶Êó•„ÄÇ",
      "È¢®Âêë„Åç„Åå1ÊôÇÈñì„Åî„Å®„Å´Â§â„Çè„Çã„É≠„Ç∑„Ç¢„É≥„É´„Éº„É¨„ÉÉ„Éà„ÄÇÂëΩ„ÅØ‰∏Ä„Å§„ÄÇ",
      "„Çµ„Ç§„Éâ„Ç∑„Éß„Ç¢„ÅåÊ®™ÊÆ¥„Çä„Åô„Åé„Å¶„Éú„Éº„Éâ„Åå„Ç´„Ç§„Éà„Å´„ÄÇÈ£õ„Å∂„Å™„ÇâÈ£õË°åÂ†¥„Åß„ÇÑ„Çä„Åü„ÅÑ„ÄÇ",
      "‰ªäÊó•„ÅØ‚ÄúÁÑ°È¢®‚Äù„Å™„ÅÆ„Å´Èù¢„ÉÑ„É´„Åò„ÇÉ„Å™„ÅÑ„ÄÇ„Åç„Å£„Å®Ë™∞„Åã„Åå„Éâ„É©„Ç§„É§„Éº‰Ωø„Å£„Å¶„Çã„ÄÇ"
    ],
    crowd: [
      "Êµ∑„ÅåÁ∏ÅÊó•Áä∂ÊÖã„ÄÇ„Éâ„É≠„ÉÉ„Éó„Ç§„É≥„ÅÆÂ±ãÂè∞„ÅåÂá∫„Å¶„Åü„ÄÇÈ†ÜÁï™ÂæÖ„Å°Âà∏„ÅåÂøÖË¶Å„ÄÇ",
      "ÈßêËªäÂ†¥Ê∫Ä„Çø„É≥„ÄÅ„Ç§„É≥„Çµ„Ç§„ÉâÊ∫Ä„Çø„É≥„ÄÅÂøÉ„ÅÆ‰ΩôË£ï„Çº„É≠„ÄÇÊí§ÈÄÄ„ÅåÊúÄÈÄü„ÅÆ‰∏äÈÅî„ÄÇ",
      "„Éî„Éº„ÇØ„Å´**Ë¶≥ÂÆ¢**„Åå‰πó„Å£„Å¶„Åü„ÄÇ„Çµ„Éº„Éï„Ç£„É≥„Å£„Å¶Ë¶≥„ÇãÁ´∂ÊäÄ„Å†„Å£„ÅëÔºü",
      "‰∫∫„ÅåÂ§ö„Åô„Åé„Å¶‚ÄúÊ≥¢„Çà„Çä‰∫∫„Çí„Åï„Å∞„Åè‚ÄùÁ∑¥Áøí„Å´„Å™„Å£„Å¶„Çã„ÄÇ",
      "„Éî„Éº„ÇØ‰∫âÂ•™Êà¶„Åå**Â§ßÁõ∏Êí≤ÂàùÂ†¥ÊâÄ**Áä∂ÊÖã„ÄÇ‰ªäÊó•„ÅØÂúü‰øµÂÖ•„Çä„ÇíËæûÈÄÄ„Åô„Çã„ÄÇ"
    ],
    gear: [
      "„Éï„Ç£„É≥„ÇíÂÆ∂„Å´Âøò„Çå„Åü„ÄÇ‰ª£„Çè„Çä„Å´**Ââ≤„ÇäÁÆ∏**„ÅØ„ÅÇ„Çã„ÄÇÂà∫„Åï„Å™„ÅÑÊñπ„ÅåËâØ„ÅÑ„Å®ÊÄù„ÅÜ„ÄÇ",
      "„ÉØ„ÉÉ„ÇØ„Çπ„ÅåË°åÊñπ‰∏çÊòé„ÄÇ„Åô„Åπ„Å¶„ÅÆÊ≥¢„ÅØ**Êªë„ÇäÂè∞**„Å®Âåñ„Åô„ÄÇ",
      "„Ç¶„Çß„ÉÉ„Éà„Åå„Åæ„Å†Êπø„Å£„Å¶„Çã„ÄÇÂøÉ„ÇÇÊπø„Å£„Å¶„Çã„ÄÇ‰ªäÊó•„ÅØ‰πæÁá•Â§ß‰ΩúÊà¶„ÄÇ",
      "„É™„Éº„Ç∑„É•„Ç≥„Éº„Éâ„Åå‚ÄúÈôêÁïå„É≠„Éº„Éó‚Äù„ÄÇÂàá„Çå„ÇãÂâç„Å´„ÇÑ„ÇÅ„Å®„Åè„ÄÇ",
      "Êùø„Å´„Éí„ÉìÁô∫Ë¶ã„ÄÇ‰ªäÊó•„ÅØ**ÊùøÁóÖÈô¢**„Å´Áõ¥Ë°å„ÄÇ"
    ],
    work: [
      "ÊÄ•„Åé„ÅÆÊ°à‰ª∂Ôºö„ÇØ„É©„Ç§„Ç¢„É≥„Éà„Åå‚ÄúÊ≥¢„Å´‰πó„ÇäÈÅÖ„Çå„Åù„ÅÜ‚Äù„Çâ„Åó„ÅÑ„ÄÇ„Åæ„Åö„ÅØ„Åù„Å£„Å°„ÅÆÊ≥¢ÂæÖ„Å°„ÄÇ",
      "PC„ÅÆÊ≥¢ÔºàÈÄöÁü•Ôºâ„ÅåÈ†≠‰∏ä„ÅßÂâ≤„ÇåÁ∂ö„Åë„Å¶„Çã„ÄÇ„Åü„Å∂„Çì**„ÉÄ„Éñ„É´„Ç™„Éº„Éê„Éº„Éò„ÉÉ„Éâ**„ÄÇ",
      "‰ºöË≠∞„Åå‚ÄúÈï∑ÊΩÆ‚Äù„ÄÇ‰∏ÄÊó•‰∏≠„Åª„Å®„Çì„Å©Âãï„Åã„Å™„ÅÑ„ÇÑ„Å§„ÄÇ",
      "‰∏äÂè∏„ÅåÊ≥¢ÂæÖ„Å°„É¢„Éº„Éâ„ÄÇÂ£∞„Åã„Åë„Å¶„ÇÇÂÖ•„Å£„Å¶„Åì„Å™„ÅÑ„ÄÇ‰ªäÊó•„ÅØ„Ç™„Éï„Ç£„Çπ„Çµ„Éº„Éï„ÄÇ",
      "„Ç®„ÇØ„Çª„É´„Åå„ÇØ„É©„ÉÉ„Ç∑„É•„Åó„Å¶‚Äú„Éõ„ÉØ„Ç§„Éà„Ç¶„Ç©„Éº„Çø„Éº‚Äù„ÄÇÂ∑ª„Åã„Çå„Å¶„ÇãÊúÄ‰∏≠„Åß„Åô„ÄÇ"
    ],
    home: [
      "Ê¥óÊøØÊßΩ„Åå**„Éì„ÉÉ„Ç∞„Çπ„Ç¶„Çß„É´**„ÄÇÂõû„Åó„Å®„Åã„Å™„ÅÑ„Å®ÂÆ∂„ÅåÊ≤à„ÇÄ„ÄÇ",
      "ÂÆ∂„ÅÆÊ§çÁâ©„Åå„Ç™„É≥„Ç∑„Éß„Ç¢„ÄÇÂÖ®ÈÉ®ÂÇæ„ÅÑ„Å¶„Çã„Åã„ÇâÊîØÂ∫¶„ÅåÂøÖË¶Å„ÄÇ",
      "„ÅÜ„Å°„ÅÆÁå´„Åå„É™„Éº„Ç∑„É•„Ç≥„Éº„Éâ„ÇíÊ∏©„ÇÅ„Å¶„Çã„ÄÇ„Å©„Åã„Åõ„Å™„ÅÑ„ÄÇ",
      "Â≠ê„Å©„ÇÇ„Åå‚ÄúÊ≥¢‰πó„Çä„Åî„Å£„Åì‚Äù„ÄÇÂÑ™ÂÖàÊ®©„ÇíË≠≤„Çã„ÅÆ„ÅåË¶™„ÅÆÂãô„ÇÅ„ÄÇ",
      "ÂÜ∑ËîµÂ∫´„Åå„Ç§„É≥„Çµ„Ç§„Éâ„Åß„Éñ„É¨„Ç§„ÇØ„ÄÇ‰ªäÊó•‰∏≠„Å´Ë≤∑„ÅÑÁâ©„Çª„ÉÉ„Ç∑„Éß„É≥„ÅåÂøÖË¶Å„ÄÇ"
    ],
    myth: [
      "„Ç§„É´„Ç´„Åå„Éî„Éº„ÇØÂÑ™ÂÖàÂà©Áî®‰∏≠„ÄÇËá™Ê≤ª‰Ωì„É´„Éº„É´„Å´Âæì„ÅÜ„ÄÇ",
      "Êµ∑„ÅÆÁ•ûÊßò„Åå‚Äú‰ªäÊó•„ÅØOFF‚Äù„Å£„Å¶Ë®Ä„Å£„Å¶„ÅüÔºàÂ§¢ÊûïÔºâ„ÄÇ",
      "Ê∞¥Âπ≥Á∑ö„Å´**„Éê„Ç∞**„ÅåÂá∫„Å¶„Çã„ÄÇ„Ç¢„ÉÉ„Éó„Éá„Éº„ÉàÂæÖ„Å°„ÄÇ",
      "Ê≥¢„ÅÆÂ•≥Á•û„ÅåÊúâÁµ¶ÂèñÂæó‰∏≠„ÄÇÂä¥Âü∫„Å´„ÅØÈÄÜ„Çâ„Åà„Å™„ÅÑ„ÄÇ",
      "ÂÆáÂÆôÁ∑ö„ÅÆÂΩ±Èüø„Åß‰ªäÊó•„ÅØÊ≥¢„ÅÆÂΩ¢„Åå‚Äú„Éî„ÇØ„Çª„É´Âåñ‚Äù„ÄÇ"
    ]
  };

  const TEMPLATES_AFTER = {
    tide: [
      "‰ªäÊó•„ÅØÊΩÆ‰Ωç„ÅÆ„Çø„Ç§„Éü„É≥„Ç∞„ÇíÂÆåÂÖ®„Å´Ë™≠„ÅøÈÅï„Åà„Åü„ÄÇÂÖ®ÈÉ®„Ç§„É≥„Çµ„Ç§„Éâ„ÅßÁµÇ„Çè„Å£„Åü„ÄÇ",
      "„Çª„ÉÉ„Éà„ÅÆÂë®Êúü„Åå„Éê„É©„Éê„É©„Åß„ÄÅÂêà„Çè„Åõ„ÅüÈ†É„Å´„ÅØÊ≥¢„ÅåËÄÅË°∞„Åó„Å¶„Åü„ÄÇ",
      "Èù¢„ÉÑ„É´„Å´Ë¶ã„Åà„Åü„ÅÆ„ÅØÈåØË¶ö„ÄÇÂâ≤„Çå„ÇãÈ†É„Å´„ÅØÊ≥°„Åó„ÅãÊÆã„Å£„Å¶„Å™„Åã„Å£„Åü„ÄÇ"
    ],
    wind: [
      "„Ç™„Éï„Ç∑„Éß„Ç¢„ÅåÂº∑„Åô„Åé„ÄÅ„ÉÜ„Ç§„ÇØ„Ç™„Éï„ÅßÊØéÂõû„Éï„É≠„É≥„Éà„Åã„Çâ**„Éê„ÉÉ„ÇØ„Éâ„É≠„ÉÉ„Éó**„ÄÇ",
      "„Çµ„Ç§„Éâ„Ç∑„Éß„Ç¢„Å´ËÇ©„ÇíÊåÅ„Å£„Å¶„ÅÑ„Åã„Çå„ÄÅ„É¨„Éº„É´„ÅåË®Ä„ÅÜ„Åì„Å®„ÇíËÅû„Åã„Å™„ÅÑÊó•„Å†„Å£„Åü„ÄÇ",
      "„Ç¨„Çπ„ÉÜ„Ç£„Åß„ÉÜ„Ç§„ÇØ„Ç™„Éï„ÅåÂÖ®ÈÉ®**Ë≥≠Âçö**„ÄÇÂΩì„Åü„Çä„ÅØ„Çº„É≠„ÄÇ"
    ],
    crowd: [
      "„Éî„Éº„ÇØ„ÅÆ„Ç≥„Éº„É´ÂêàÊà¶„Å´ÂèÇÂä†„Åó„Åü„Å†„Åë„ÅßÁ´∂ÊäÄ„ÅØÁµÇ‰∫Ü„ÄÇ‰πó„Å£„ÅüÊú¨Êï∞„Çà„ÇäË¨ù„Å£„ÅüÂõûÊï∞„ÅåÂ§ö„ÅÑ„ÄÇ",
      "Ââç‰πó„ÇäÂõûÈÅø„Åß„É©„Ç§„É≥„Åå„Ç∞„Éã„É£„Ç∞„Éã„É£„ÄÇÁæé„Åó„ÅÑ„ÅÆ„ÅØË≠≤„ÇäÂêà„ÅÑ„ÅÆÂøÉ„Å†„Åë„ÄÇ",
      "‰∫∫Ê∑∑„Åø„ÅßÊ≥¢„Åå**Ââ≤„ÇäÂãò**„Å´„Å™„Å£„Å¶„ÄÅÂèñ„ÇäÂàÜ„ÅåÊ≥°‰∏ÄÂè£„ÄÇ"
    ],
    gear: [
      "„Éï„Ç£„É≥„Çª„ÉÉ„ÉÜ„Ç£„É≥„Ç∞„ÅåËø∑Â≠ê„ÄÇÁõ¥Á∑ö„ÅØÂá∫„Çã„ÅÆ„Å´„Çø„Éº„É≥„ÅØÂá∫„Å™„ÅÑ‰∏çÊÄùË≠∞„Å™Êùø„Å´‰πó„Å£„Å¶„Åü„ÄÇ",
      "„ÉØ„ÉÉ„ÇØ„Çπ„ÅÆÂ°ó„Çä„Åô„Åé„ÅßË∂≥„ÅåÂõ∫ÂÆö„ÄÇ„Çø„Éº„É≥„Åó„Çà„ÅÜ„Å®„Åó„Åü„Çâ**ÂÆ∂ÂÖ∑**„Å†„Å£„Åü„ÄÇ",
      "„É™„Éº„Ç∑„É•„ÅåÁµ°„ÅøËä∏„ÇíÊä´Èú≤„ÄÇËß£„ÅÑ„Å¶„ÇãÈñì„Å´‰ªäÊó•„ÅåÁµÇ„Çè„Å£„Åü„ÄÇ"
    ],
    work: [
      "„É™„É¢„Éº„Éà„ÅÆÈÄöÁü•„ÅåÈ≥¥„Çã„Åü„Å≥„Å´ÈõÜ‰∏≠„ÅåÂàá„Çå„Å¶„ÄÅ„Çø„Éº„É≥„ÅÆÂ∫¶„Å´**Slack**„ÅåÂà∫„Åï„Çã„ÄÇ",
      "‚Äú‰ªäÊó•„Åì„ÅùÂÆöÊôÇ‚Äù„ÅÆË™ì„ÅÑ„ÅåÈáç„Åè„ÄÅ‰ΩìÂππ„Åå**„Ç≥„É≥„Éó„É©„Ç§„Ç¢„É≥„Çπ**„Å´Á∏õ„Çâ„Çå„Å¶„Åü„ÄÇ",
      "‰ºöË≠∞„ÅÆË≠∞‰∫ãÈå≤„ÇíËÑ≥ÂÜÖ„ÅßÊõ∏„Åç„Å™„Åå„Çâ‰πó„Å£„Åü„Çâ„ÄÅÊ≥¢„ÅÆÊñπ„ÅåË≠∞‰∫ãÈÄ≤Ë°å„Å´ÂÖ•„Å£„Å¶„Åì„Å™„Åã„Å£„Åü„ÄÇ"
    ],
    home: [
      "ÂØù‰∏çË∂≥„ÅßÂèçÂ∞ÑÈÄüÂ∫¶„Åå**2„Éï„É¨„Éº„É†**ËêΩ„Å°„Å¶„Åü„ÄÇÊµ∑„Åß„ÅØ„Éï„É¨„Éº„É†ËêΩ„Å°„ÅØÂëΩÂèñ„Çä„ÄÇ",
      "Ê¥óÊøØÁâ©„ÇíÂπ≤„ÅóÂøò„Çå„Å¶È†≠„ÅÆÁâáÈöÖ„Åå„Åö„Å£„Å®Èõ®„ÄÇÈõÜ‰∏≠Âäõ„ÅÆ‰ΩéÊ∞óÂúß„ÅåÂÅúÊªû„Åó„Å¶„Åü„ÄÇ",
      "ÂÆ∂„ÅÆÈçµ„Çí„Å©„Åì„Å´ÁΩÆ„ÅÑ„Åü„ÅãËÄÉ„Åà„Å¶„Åü„Çâ„Ç∑„Éß„É´„ÉÄ„Éº„Å´ÁΩÆ„ÅÑ„Å¶„ÅÑ„Åã„Çå„Åü„ÄÇ"
    ],
    myth: [
      "„Ç§„É´„Ç´„Åå„É©„Ç§„É≥Âèñ„Çä„Å´Âè£„ÇíÂá∫„Åó„Å¶„Åç„Å¶„ÄÅÂÖ®ÈÉ®‚ÄúÊ≠£Ëß£„Å´Ëøë„ÅÑÂ§±Êïó‚Äù„Å´„Å™„Å£„Åü„ÄÇ",
      "Êµ∑„ÅÆÁ•ûÊßò„Åå„ÉÜ„Çπ„Éà‰∏≠„ÄÇÁßÅ„ÅÆ„Çª„ÇØ„Ç∑„Éß„É≥„Å†„Åë**A/B„ÉÜ„Çπ„Éà**„Å´Â§ñ„Åï„Çå„Å¶„Åü„ÄÇ",
      "Êòü„ÅÆÈÖçÁΩÆ„Åå„Ç∑„Éß„É´„ÉÄ„ÉºÂØÑ„Çä„ÄÇÂç†ÊòüË°ì„Å´Ë©≥„Åó„ÅÑ‰∫∫„Å™„Çâ„Çè„Åã„Çã„ÇÑ„Å§„ÄÇ"
    ]
  };

  const TAGS = {
    tide: ["#ÊΩÆ"], wind: ["#È¢®"], crowd: ["#Ê∑∑Èõë"], gear: ["#ÈÅìÂÖ∑"],
    work: ["#‰ªï‰∫ã"], home: ["#ÂÆ∂Â∫≠"], myth: ["#Á•ûË©±"]
  };

  // „Åµ„Åñ„ÅëÂ∫¶„Åß‰ªòÂä†
  const SILLY_ENDINGS = [
    "‚Ä¶„Å®„ÅÑ„ÅÜÂ≠¶Ë°ìÁöÑÁµêË´ñ„Å´ÈÅî„Åó„Åæ„Åó„Åü„ÄÇ",
    "„Å™„ÅÆ„ÅßÊú¨Êó•„ÅØ**Á≤æÁ•û‰øÆË°å**„Å´Â∞ÇÂøµ„Åó„Åæ„Åô„ÄÇ",
    "‰ªäÊó•„ÅØÊµ∑„Å´Êï¨ÊÑè„ÇíË°®„Åó„Å¶‚ÄúË¶ãÂ≠¶„Éó„É≠‚Äù„Å´Âæπ„Åó„Åæ„Åô„ÄÇ",
    "‰ª£„Çè„Çä„Å´Ê≥¢ÂãïÁîª„ÇíË¶≥„Å¶„Ç§„É°„Éà„É¨3ÊôÇÈñì„ÅÑ„Åç„Åæ„Åô„ÄÇ",
    "Ê¨°„ÅÆÂè∞È¢®„Åæ„ÅßÂøÉ„ÇíÂÖÖÈõª„Åó„Åæ„Åô„ÄÇ",
    "Ê≥¢ÊÉÖÂ†±„Ç¢„Éó„É™„Å´‚ÄúÊú¨Êó•Ëá®ÊôÇ‰ºëÊ•≠‚Äù„Å®Êõ∏„ÅÑ„Å¶„ÅÇ„Å£„ÅüÔºàÊ∞ó„Åå„Åô„ÇãÔºâ„ÄÇ"
  ];
  const SILLY_EMOJI = ["üòÇ","ü§ô","ü´†","üåÄ","üåä","üõü","üìâ","üß™"];

  // Ê∞∏Á∂öÂåñ„Ç≠„Éº
  const LS_KEY = "excuses_history_v2";
  const FAV_KEY = "excuses_fav_v2";

  // Ë¶ÅÁ¥†
  const elSituation = $("#situation");
  const elCategory = $("#category");
  const elTone = $("#tone");
  const elToneVal = $("#toneVal");
  const elText = $("#excuseText");
  const elTags = $("#excuseTags");
  const elSeed = $("#excuseSeed");
  const btnGen = $("#btnGen");
  const btnCopy = $("#btnCopy");
  const btnShare = $("#btnShare");
  const btnFav = $("#btnFav");
  const histList = $("#histList");
  const btnClear = $("#btnClear");
  const btnExport = $("#btnExport");

  // Áä∂ÊÖã
  let history = loadJSON(LS_KEY, []);
  let fav = new Set(loadJSON(FAV_KEY, []));

  // ÂàùÊúüUI
  elToneVal.textContent = elTone.value;
  renderHistory();

  // URL seed
  const urlSeed = getHashParam("s");
  if (urlSeed) {
    const parsed = parseInt(urlSeed, 10);
    const ex = generateExcuse(parsed);
    showExcuse(ex);
  }

  // „Ç§„Éô„É≥„Éà
  elTone.addEventListener("input", () => elToneVal.textContent = elTone.value);
  btnGen.addEventListener("click", () => showExcuse(generateExcuse(), true));
  btnCopy.addEventListener("click", async () => {
    await navigator.clipboard.writeText(elText.textContent.trim());
    flash(btnCopy, "„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åü");
  });
  btnShare.addEventListener("click", () => {
    const seed = elSeed.dataset.seed || String(Date.now());
    const shareUrl = withSeedInUrl(location.href.split("#")[0], seed);
    const text = `${elText.textContent.trim()}\n${shareUrl}`;
    window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`, "_blank");
  });
  btnFav.addEventListener("click", () => toggleFav(parseInt(elSeed.dataset.seed || "0", 10)));
  btnClear?.addEventListener("click", () => {
    if (!confirm("Â±•Ê≠¥„Çí„Åô„Åπ„Å¶Ê∂à„Åó„Åæ„Åô„ÅãÔºü")) return;
    history = []; saveJSON(LS_KEY, history); renderHistory();
  });
  btnExport?.addEventListener("click", () => {
    const csv = toCSV(history);
    const blob = new Blob([csv], { type: "text/csv;charset=utf-8" });
    const a = document.createElement("a");
    a.href = URL.createObjectURL(blob); a.download = "excuses.csv"; a.click();
    URL.revokeObjectURL(a.href);
  });

  // „Ç∑„Éß„Éº„Éà„Ç´„ÉÉ„ÉàÔºöG / C
  window.addEventListener("keydown", (e) => {
    if (["INPUT","SELECT","TEXTAREA"].includes(e.target.tagName)) return;
    const k = e.key.toLowerCase();
    if (k === "g") btnGen.click();
    if (k === "c") btnCopy.click();
  });

  // ============= ÁîüÊàê„É≠„Ç∏„ÉÉ„ÇØ =============
  function generateExcuse(forcedSeed = null) {
    const situationSel = elSituation.value; // mix / skip / after
    const situation = situationSel === "mix"
      ? (Math.random() < 0.5 ? "skip" : "after")
      : situationSel;

    const cats = Object.keys(TEMPLATES_SKIP);
    const cat = elCategory.value === "any" ? pick(cats) : elCategory.value;

    const tone = Number(elTone.value);

    const seed = forcedSeed ?? (Date.now() ^ Math.floor(Math.random()*1e9));
    const rng = mulberry32(seed);

    const wdeg = [45, 90, 135, 180, 225, 270][Math.floor(rng()*6)];
    const time = randomFrom(rng, ["Êúù„Ç§„ÉÅ","„Éü„Éâ„É´„Çø„Ç§„Éâ","Â§ïÊñπ","Â§úÊòé„ÅëÂâç","Ê∫ÄÊúà„Çø„Ç§„É†"]);

    const pool = situation === "skip" ? TEMPLATES_SKIP : TEMPLATES_AFTER;
    let base = pick(pool[cat], rng);

    // ÁΩÆÊèõ
    let text = base.replaceAll("${wdeg}", wdeg).replaceAll("${time}", time);

    // „Åµ„Åñ„ÅëÂ∫¶
    if (tone >= 30) text += " " + pick(SILLY_ENDINGS, rng);
    if (tone >= 60) text = addExaggeration(text);
    if (tone >= 80) text += " " + repeat(pick(SILLY_EMOJI, rng), 2 + Math.floor(rng()*2));

    // „Çø„Ç∞
    const tags = (TAGS[cat] || []).slice();
    tags.unshift(situation === "skip" ? "#ÂÖ•„Çâ„Å™„ÅÑÁêÜÁî±" : "#ÂèçÁúÅ„ÅÆÁêÜÁî±");
    if (tone >= 60) tags.push("#„Åµ„Åñ„ÅëÂ∫¶È´ò„ÇÅ");

    return { seed, text, tags, situation, cat, tone, time };
  }

  function showExcuse(ex, pushHistory=false) {
    elText.textContent = ex.text;
    elTags.textContent = ex.tags.join(" ");
    elSeed.textContent = `seed: ${ex.seed}`;
    elSeed.dataset.seed = String(ex.seed);

    if (pushHistory) {
      history.unshift({ ...ex, ts: new Date().toISOString(), fav: fav.has(ex.seed) });
      if (history.length > 200) history.length = 200;
      saveJSON(LS_KEY, history); renderHistory();
    }
    btnFav.classList.toggle("active", fav.has(ex.seed));
    btnFav.textContent = fav.has(ex.seed) ? "‚òÖ „ÅäÊ∞ó„Å´ÂÖ•„Çä‰∏≠" : "‚òÖ „ÅäÊ∞ó„Å´ÂÖ•„Çä";
  }

  // ============= Â±•Ê≠¥ =============
  function renderHistory() {
    histList.innerHTML = "";
    if (!history.length) {
      histList.innerHTML = `<li class="item"><div class="txt">„Åæ„Å†Â±•Ê≠¥„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</div></li>`;
      return;
    }
    history.forEach(item => {
      const li = document.createElement("li");
      li.className = "item";
      li.innerHTML = `
        <div class="row">
          <div class="txt">${escapeHtml(item.text)}</div>
          <div class="tools">
            <button class="btn btn-sm" data-k="use">‰Ωø„ÅÜ</button>
            <button class="btn btn-sm" data-k="copy">„Ç≥„Éî„Éº</button>
            <button class="btn btn-sm" data-k="share">ÂÖ±Êúâ</button>
            <button class="btn btn-sm ${fav.has(item.seed)?'btn-primary':''}" data-k="fav">${fav.has(item.seed)?"‚òÖ": "‚òÜ"}</button>
          </div>
        </div>
        <div class="row">
          <span class="badge">${item.tags.join(" ")}</span>
          <span class="badge">seed:${item.seed}</span>
        </div>
      `;
      histList.appendChild(li);

      const [btnUse, btnCopy2, btnShare2, btnFav2] = $$("button", li);
      btnUse.addEventListener("click", () => showExcuse(item, false));
      btnCopy2.addEventListener("click", async () => {
        await navigator.clipboard.writeText(item.text);
        flash(btnCopy2, "„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åü");
      });
      btnShare2.addEventListener("click", () => {
        const shareUrl = withSeedInUrl(location.href.split("#")[0], item.seed);
        const text = `${item.text}\n${shareUrl}`;
        window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`, "_blank");
      });
      btnFav2.addEventListener("click", () => {
        toggleFav(item.seed);
        btnFav2.classList.toggle("btn-primary", fav.has(item.seed));
        btnFav2.textContent = fav.has(item.seed) ? "‚òÖ" : "‚òÜ";
      });
    });
  }

  // ============= „ÅäÊ∞ó„Å´ÂÖ•„Çä =============
  function toggleFav(seed) {
    if (fav.has(seed)) fav.delete(seed); else fav.add(seed);
    saveJSON(FAV_KEY, Array.from(fav));
    btnFav.classList.toggle("active", fav.has(seed));
    btnFav.textContent = fav.has(seed) ? "‚òÖ „ÅäÊ∞ó„Å´ÂÖ•„Çä‰∏≠" : "‚òÖ „ÅäÊ∞ó„Å´ÂÖ•„Çä";
    renderHistory();
  }

  // ============= „É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£ =============
  function pick(arr, rng=Math){ return arr[Math.floor(rng()*arr.length)]; }
  function randomFrom(rng, arr){ return arr[Math.floor(rng()*arr.length)]; }

  function addExaggeration(text){
    return text
      .replace("Âº∑„Åô„Åé„Å¶", "Âº∑„Åô„Åé„Å¶**ÂÆáÂÆô**")
      .replace("„É≠„Ç∑„Ç¢„É≥„É´„Éº„É¨„ÉÉ„Éà", "„É≠„Ç∑„Ç¢„É≥„É´„Éº„É¨„ÉÉ„ÉàÔºàÂÖ®ÂºæË£ÖÂ°´Ôºâ")
      .replace("Â∑®Â§ß„Å™", "Â∑®Â§ß„Å™ÔºàÂΩìÁ§æÊØî1.8ÂÄçÔºâ");
  }
  function repeat(s, n){ return Array.from({length:n}).map(()=>s).join(" "); }

  function flash(btn, msg){
    const prev = btn.textContent;
    btn.textContent = msg;
    setTimeout(()=>btn.textContent = prev, 900);
  }

  // ÂÖ±ÊúâÁî®ÔºöURL„Å´ #s=seed „Çí‰ªò‰∏é
  function withSeedInUrl(base, seed){
    try { const url = new URL(base); url.hash = `s=${seed}`; return url.toString(); }
    catch { return `${base}#s=${seed}`; }
  }
  function getHashParam(key){
    const m = location.hash.match(new RegExp(`${key}=([0-9]+)`));
    return m ? m[1] : null;
  }

  // ‰π±Êï∞Ôºà„Ç∑„Éº„Éâ„ÅÇ„ÇäÔºâ
  function mulberry32(a) {
    return function() {
      let t = a += 0x6D2B79F5;
      t = Math.imul(t ^ t >>> 15, t | 1);
      t ^= t + Math.imul(t ^ t >>> 7, t | 61);
      return ((t ^ t >>> 14) >>> 0) / 4294967296;
    }
  }

  // ‰øùÂ≠ò/Ë™≠Ëæº
  function saveJSON(key, v){ localStorage.setItem(key, JSON.stringify(v)); }
  function loadJSON(key, def){ try { return JSON.parse(localStorage.getItem(key)) ?? def; } catch { return def; } }

  // CSVÔºàsituationÂàó„ÇíËøΩÂä†Ôºâ
  function toCSV(arr){
    const header = ["time","seed","situation","category","tone","text","tags"];
    const lines = [header.join(",")];
    arr.forEach(x => {
      const row = [
        x.ts ?? "",
        x.seed,
        x.situation,
        x.cat,
        x.tone,
        quote(x.text),
        quote((x.tags||[]).join(" "))
      ].join(",");
      lines.push(row);
    });
    return lines.join("\n");
  }
  function quote(s){
    const t = String(s ?? "").replaceAll('"','""');
    return `"${t}"`;
  }
  function escapeHtml(s){
    return String(s).replace(/[&<>"']/g, c => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[c]));
  }
})();
